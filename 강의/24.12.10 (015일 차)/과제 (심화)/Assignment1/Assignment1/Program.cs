/*
날짜: 24.12.10
이름: 이시온

### **과제 1) Hero 클래스 생성**

새로운 cs 파일을 만들고, **Hero** 클래스 생성

- **필드 혹은 프로퍼티**
    - 문자열 영웅의 이름
    - 정수형  영웅의 체력
    - 정수형 영웅의 공격력
    - 정수형 영웅의 방어력
- **생성자**
    - 기본 생성자: "Unknown Hero"로 영웅 이름을 설정하고, HP는 100, 공격력은 20, 방어력은 10으로 설정
    - 오버로딩 생성자: 이름, 체력, 공격력, 방어력을 모두 외부에서 세팅해 줄 수 있는 생성자도 하나 생성
- **메서드**
    - 피격을 나타내는 메서드 **TakeDamage**
        - 반환은 없음. 인자값은 정수형 damage
        - 받은 피해를 체력에서 차감, 방어력은 피해를 경감시키는 역할
        - 예를 들어, 인자로 넘어온 데미지는 40, 방어력은 10이면 총 30 데미지 받음
        
    - 몬스터 공격하는 메서드 **AttackMob**
        - 반환 없음. 인자값은 아래 만들 Monster형 mob
        - cw 로 “몹 이름을 공격!” 출력
        - mob의 TakeDamage 메서드 호출하되, 인자로 hero의 공격력 넘김
        
    - 영웅의 상태를 출력하는 함수 **DisplayInfo**
        - cw로 영웅 속 다양한 요소들을 본인 취향에 맞게 자유롭게 출력하는 기능
    
    ---
    

### **과제 2) Monster 클래스 생성**

새로운 cs 파일을 만들고, **Monster** 클래스를 생성

- **필드 혹은 프로퍼티**
    - 문자열 몹 이름
    - 정수형  몹 체력
    - 정수형 몹 공격력
    - 정수형 몹 방어력
    - 정수형 몹 레벨
- **생성자**
    - 기본 생성자: “Basic Monster"로 몬스터 이름을 설정하고, HP는 50, 공격력은 15, 방어력은 5, 레벨은 1로 설정
    - 오버로딩 생성자: 이름, 체력, 공격력, 방어력, 레벨을 외부에서 세팅해 줄 수 있는 생성자도 하나 생성
- **메서드**
    - **TakeDamage**
        - 반환은 없음
        - 받은 피해를 체력에서 차감, 방어력은 피해를 경감시키는 역할
        - 예를 들어, 인자로 넘어온 데미지가 40이고 방어력이 5이면 35 뎀지 입음
    - **AttackHero**
        - 반환은 없음
        - 인자값으로 영웅 객체 hero 를 받아 몬스터가 영웅을 공격하도록 구현
        - hero 속 메서드 TakeDamage를 호출, 인자값으로 몹 공격력 넘겨줌
    - **DisplayInfo**
        - 몬스터의 상태를 출력하는 함수
        - 몬스터의 이름, 체력, 공격력, 방어력, 레벨을 출력

---

### **과제 3) 게임 테스트**

- 메인으로 이동해서 다음을 작성 후 테스트
- **Hero** 객체와 **Monster** 객체를 각각 하나씩 생성.
    - Hero는 기본 생성자로 호출해보고 Monster는 오버로딩된 생성자 호출하고 값은 적당히 체력 40, 공격력 14, 방어력 4, 레벨3 정도 세팅
- **Hero** 객체는 **AttackMob()** 메서드를 사용하여 **Monster** 객체를 공격
- **Monster** 객체는 **AttackHero()** 메서드를 사용하여 **Hero** 객체를 공격
- 각각의 공격 후 **Hero**와 **Monster** 객체의 상태를 출력하는 DisplayInfo 를 활용해서 현재 상태 확인하기

---

## 심화 과제 1

위에서 main문에 적힌 모든 코드 삭제. 메인문은 아래 코드만 적음

```csharp
class Program
{
    static void Main(string[] args)
    {
        Game game = new Game();
        game.Play();
    }
}
```

- Game이라는 클래스를 새로운 cs에 작성
- Game 클래스는 맴버변수로 Hero 하나와 Monster 하나를 가짐
- Game 클래스는 생성과 동시에 Hero 와 Monster에 각각 뉴할당을 함.
    - Hero 는 이름"Archer", 체력 100, 공격력 30, 방어력 5 로 세팅
    - Monster는 이름"Skeleton", 체력 50, 공격력 20, 방어력 5, 레벨은 1로 세팅

- Game속에 **Play**라는 메서드 작성(반환X, 인자X)
    - 일단 게임이 시작되었다는 cw 출력
    - Game이 들고있는 영웅과 몹의 체력이 둘 다 0 이상이라면 무한 반복 시작
    - 무한 반복을 하며, 사용자에게 다음 행동을 물어봄
        
        ```csharp
        다음 행동으로 무엇을 하시겠습니까? (1혹은2 입력 후 엔터)
        1. 영웅이 몬스터를 공격
        2. 몬스터가 영웅 공격
        ```
        
    - 만약 1번이 입력되었다면 영웅이 몹 공격하는 로직 실행
    - 2번이 입력되었다면 몹이 영웅 치는 로직 실행
    - 1,2 가 아닌 입력값 들어오면 제대로 다시 입력하라고 출력 후 다시 입력받음
    
    - 1 혹은 2가 정상 수행되었다면, 이후 영웅과 몹의 상태 보여주는 메서드 각각 실행
    - 만약 영웅 체력이 0 이하면 “영웅 사망으로 종료” 출력 후 무한루프 탈출
    - 만약 몹 체력이 0 이하면 “몹 사망으로 종료” 출력 후 무한루프 탈출
    - 위 내용을 구현하면서 만약 Hero나 Monster쪽에 추가로 필요한 메서드나 프로퍼티가 있다면 자유롭게 추가해보기(0 이하 처리 등등)
*/

//using System;

namespace Assignment1
{
    internal class Program
    {
        private static void Main(string[] args)
        {
            /*
            Hero hero = new();

            Monster monster = new("괴물", 40, 14, 4, 3);

            hero.AttackMob(monster);

            monster.AttackHero(hero);

            Console.WriteLine();

            hero.DisplayInfo();

            Console.WriteLine();

            monster.DisplayInfo();
            */

            Game game = new();

            game.Play();
        }
    }
}